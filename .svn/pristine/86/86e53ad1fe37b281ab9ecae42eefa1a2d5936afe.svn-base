<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.sys.SysMenuDao" >
    <sql id="columns"> id, code, name, href, category, icon, css_class, css_style, caption, show_state, serial_number, parent_id </sql>

    <sql id="wheres">
        <where>
            flag = true and status = true
            <if test="null != showState"> and show_state = #{showState}</if>
            <if test="null != category"> and category = #{category}</if>
            <if test="null != code and '' != code"> and code = #{code}</if>
            <if test="null != name and '' != name">
                <choose>
                    <when test="null != like and like == true"> and name= #{name}</when>
                    <otherwise>
                        <bind name="likeName" value="'%' + name + '%'"/>
                        and name like #{likeName}
                    </otherwise>
                </choose>
            </if>
            <if test="null != parentId and '' != parentId">
                <choose>
                    <when test="'0'.toString() == parentId">and parent_id is null</when>
                    <otherwise> and parent_id = #{parentId}::uuid</otherwise>
                </choose>
            </if>
            <if test="null != exceptId and '' != exceptId"><![CDATA[ and id <> #{exceptId}::uuid ]]></if>
        </where>
    </sql>

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.sys.SysMenu" >
        insert into sys_menu (id, create_time, update_time, flag, status,
        code, name, href, category, icon, css_class, css_style, caption, show_state, serial_number, parent_id)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status},
        #{code}, #{name}, #{href}, #{category}, #{icon}, #{cssClass}, #{cssStyle}, #{caption}, #{showState}, #{serialNumber}, #{parentId}::uuid)
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.sys.SysMenu" >
        update sys_menu set update_time = #{updateTime},
        code = #{code}, name = #{name}, href = #{href}, category = #{category}, icon = #{icon}, css_class = #{cssClass},
        css_style = #{cssStyle}, caption = #{caption}, show_state = #{showState}, serial_number = #{serialNumber},
        parent_id = #{parentId}::uuid where id = #{id}::uuid
    </update>

    <select id="getById" resultType="cn.com.enjoystudy.oa.bean.sys.SysMenu">
        select <include refid="columns"/> from sys_menu where id = #{id}::uuid and flag = true and status = true
    </select>

    <update id="deleteById">
        update sys_menu set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list" resultType="cn.com.enjoystudy.oa.bean.sys.SysMenu"
            parameterType="cn.com.enjoystudy.oa.bean.sys.SysMenuSO">
        select <include refid="columns"/>
        from sys_menu <include refid="wheres"/>
        order by serial_number asc, create_time desc
    </select>

    <select id="count" resultType="long">
        select count(id) amount
        from sys_menu <include refid="wheres"/>
    </select>

    <resultMap id="menuResultMap" type="cn.com.enjoystudy.oa.bean.sys.SysMenu">
        <id column="id" jdbcType="VARCHAR" property="id"></id>
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="href" jdbcType="VARCHAR" property="href" />
        <result column="category" jdbcType="INTEGER" property="category" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="css_class" jdbcType="VARCHAR" property="cssClass" />
        <result column="css_style" jdbcType="VARCHAR" property="cssStyle" />
        <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
        <result column="show_state" jdbcType="BOOLEAN" property="showState" />
        <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
        <collection property="menuList" ofType="cn.com.enjoystudy.oa.bean.sys.SysMenu" column="id" select="findByParentId">
            <id column="id" jdbcType="VARCHAR" property="id"></id>
            <result column="code" jdbcType="VARCHAR" property="code" />
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="href" jdbcType="VARCHAR" property="href" />
            <result column="category" jdbcType="INTEGER" property="category" />
            <result column="icon" jdbcType="VARCHAR" property="icon" />
            <result column="css_class" jdbcType="VARCHAR" property="cssClass" />
            <result column="css_style" jdbcType="VARCHAR" property="cssStyle" />
            <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
            <result column="show_state" jdbcType="BOOLEAN" property="showState" />
            <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
        </collection>
    </resultMap>

    <select id="findByParentId" resultType="cn.com.enjoystudy.oa.bean.sys.SysMenu">
        select <include refid="columns"/>
        from sys_menu where flag = true and status = true and parent_id = #{parentId}::uuid
        order by serial_number asc
    </select>

    <select id="findEmployeeMenuList" resultMap="menuResultMap">
        select <include refid="columns"/>
        from sys_menu m where m.flag = true and m.status = true
        <if test="null != showState"> and m.show_state = #{showState}</if>
        <if test="null != category"> and m.category = #{category}</if>
        <if test="null != code and '' != code"> and m.code = #{code}</if>
        <if test="null != parentId and '' != parentId">
            <choose>
                <when test="'0'.toString() == parentId"> and m.parent_id is null </when>
                <otherwise> and m.parent_id = #{showState} </otherwise>
            </choose>
        </if>
        <if test="null != employeeId and '' != employeeId">
            and exists(select distinct rm.menu_id from sys_role_menu rm where rm.flag = true and rm.status = true
            and rm.menu_id = m.id and exists(select r.id from sys_role r where r.flag = true and r.status = true
            and r.id = rm.role_id and exists(select distinct er.role_id from employee_role er
            where er.flag = true and er.status = true and er.role_id = r.id and exists(select ea.id from employee_account ea
            where ea.flag = true and ea.status = true and ea.id = er.employee_id and ea.id = #{employeeId}::uuid))))
        </if>
    </select>

</mapper>