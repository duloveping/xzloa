<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.sys.BaseDictionaryDao" >
    <resultMap id="resultMap" type="cn.com.enjoystudy.oa.bean.sys.BaseDictionary">
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="caption" jdbcType="VARCHAR" property="caption" />
        <result column="show_state" jdbcType="BOOLEAN" property="showState" />
        <collection property="itemList" column="{dictionaryId=id}" javaType="java.util.List"
                    ofType="cn.com.enjoystudy.oa.bean.sys.BaseDictionaryItem" select="findItemByDictionaryId"/>
    </resultMap>

    <sql id="columns"> id, code, name, caption, show_state </sql>

    <sql id="wheres">
        <where>
            flag = true and status = true
            <if test="null != showState"> and show_state = #{showState}</if>
            <if test="null != code and '' != code"> and code = #{code}</if>
            <if test="null != name and '' != name">
                <choose>
                    <when test="null != like and like == true"> and name= #{name}</when>
                    <otherwise>
                        <bind name="likeName" value="'%' + name + '%'"/>
                        and name like #{likeName}
                    </otherwise>
                </choose>
            </if>
            <if test="null != exceptId and '' != exceptId">
                <![CDATA[ id <> #{exceptId}::uuid ]]>
            </if>
        </where>
    </sql>

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.sys.BaseDictionary" >
        insert into base_dictionary (id, create_time, update_time, flag, status, code, name, caption, show_state)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status}, #{code}, #{name}, #{caption}, #{showState})
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.sys.BaseDictionary" >
        update base_dictionary set update_time = #{updateTime}, code = #{code}, name = #{name}, caption = #{caption},
        show_state = #{showState} where id = #{id}::uuid
    </update>

    <select id="getById" resultMap="resultMap">
        select <include refid="columns"/> from base_dictionary where id = #{id}::uuid and flag = true and status = true
    </select>

    <update id="deleteById">
        update base_dictionary set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list" resultMap="resultMap" parameterType="cn.com.enjoystudy.oa.bean.sys.BaseDictionarySO">
        select <include refid="columns"/> from base_dictionary <include refid="wheres"/> order by create_time desc
    </select>

    <select id="count" resultType="long" parameterType="cn.com.enjoystudy.oa.bean.sys.BaseDictionarySO">
        select count(id) amount from base_dictionary <include refid="wheres"/>
    </select>

    <select id="findItemByDictionaryId" resultType="cn.com.enjoystudy.oa.bean.sys.BaseDictionaryItem">
        select id, dictionary_id, item_text, item_value, show_state, serial_number
        from base_dictionary_item  where dictionary_id = #{dictionaryId}::uuid and flag = true and status = true
        order by serial_number asc
    </select>
</mapper>