<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.study.CourseAttachmentDao">
    <sql id="columns"> id, course_id, video_id, file_name, file_path, file_type, file_size, upload_time </sql>

    <sql id="wheres">
        <where>
            flag = true and status = true
            <if test="null != courseId and '' != courseId"> and course_id = #{courseId}::uuid</if>
            <if test="null != videoId and '' != videoId"> and video_id = #{videoId}::uuid</if>
        </where>
    </sql>

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.study.CourseAttachment" >
        insert into course_attachment (id, create_time, update_time, flag, status,
        course_id, video_id, file_name, file_path, file_type, file_size, upload_time)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status},
        #{courseId}::uuid, #{videoId}::uuid, #{fileName}, #{filePath}, #{fileType}, #{fileSize}, #{uploadTime})
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.study.CourseAttachment" >
        update course_attachment set update_time = #{updateTime},
        course_id = #{courseId}::uuid, video_id = #{videoId}::uuid, file_name = #{fileName},
        file_path = #{filePath}, ile_type = #{fileType}, file_size = #{fileSize}, upload_time = #{uploadTime}
        where id = #{id}::uuid
    </update>

    <select id="getById" resultType="cn.com.enjoystudy.oa.bean.study.CourseAttachment">
        select <include refid="columns"/>
        from course_attachment where id = #{id}::uuid and flag = true and status = true
    </select>

    <update id="deleteById">
        update course_attachment set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list" resultType="cn.com.enjoystudy.oa.bean.study.CourseAttachment"
            parameterType="cn.com.enjoystudy.oa.bean.study.CourseAttachmentSO">
        select <include refid="columns"/>
        from course_attachment <include refid="wheres"/>
        order by create_time asc
    </select>

    <delete id="delete">
        delete from course_attachment
        <where>
            <if test="null != id and '' != id"> and id = #{id}::uuid</if>
            <if test="null != courseId and '' != courseId"> and course_id = #{courseId}::uuid</if>
            <if test="null != videoId and '' != videoId"> and video_id = #{videoId}::uuid</if>
        </where>
    </delete>

    <delete id="deleteByVideoId">
        delete from course_attachment where video_id = #{videoId}::uuid
    </delete>

    <delete id="deleteByCourseId">
        delete from course_attachment where course_id = #{courseId}::uuid
    </delete>
</mapper>