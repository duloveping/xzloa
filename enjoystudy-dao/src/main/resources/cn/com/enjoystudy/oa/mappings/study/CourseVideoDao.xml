<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.study.CourseVideoDao" >
    <sql id="wheres">
        <where>
            flag = true and status = true
            <if test="null != courseId and '' != courseId"> and course_id = #{courseId}::uuid</if>
            <if test="null != showState"> and show_state = #{showState}</if>
            <if test="null != name and '' != name">
                <choose>
                    <when test="like == false"> and name= #{name}</when>
                    <otherwise>
                        <bind name="likeName" value="'%' + name + '%'"/>
                        and name like #{likeName}
                    </otherwise>
                </choose>
            </if>
        </where>
    </sql>

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.study.CourseVideo" >
        insert into course_video (id, create_time, update_time, flag, status,
        course_id, name,  image, file_name, file_path, file_type, file_size, upload_time, show_state,
        introduction, description)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status},
        #{courseId}::uuid, #{name}, #{image}, #{fileName}, #{filePath}, #{fileType}, #{fileSize}, #{uploadTime}, #{showState},
        #{introduction}, #{description})
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.study.CourseVideo" >
        update course_video set update_time = #{updateTime},
        course_id = #{courseId}::uuid, name = #{name}, image = #{image}, file_name = #{fileName}, file_path = #{filePath},
        file_type = #{fileType}, file_size = #{fileSize}, show_state = #{showState}
        upload_time = #{uploadTime}, introduction = #{introduction},
        description = #{description} where id = #{id}::uuid
    </update>

    <resultMap id="getByIdResultMap" type="cn.com.enjoystudy.oa.bean.study.CourseVideo">
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="course_id" jdbcType="VARCHAR" property="courseId" />
        <result column="course_name" jdbcType="VARCHAR" property="courseName" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="image" jdbcType="VARCHAR" property="image" />
        <result column="file_name" jdbcType="VARCHAR" property="fileName" />
        <result column="file_path" jdbcType="VARCHAR" property="filePath" />
        <result column="file_type" jdbcType="VARCHAR" property="fileType" />
        <result column="file_size" jdbcType="BIGINT" property="fileSize" />
        <result column="upload_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="show_state" jdbcType="BOOLEAN" property="showState" />
        <result column="introduction" jdbcType="VARCHAR" property="introduction" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <collection property="attachmentList" column="{videoId=id}" javaType="java.util.List"
                    ofType="cn.com.enjoystudy.oa.bean.study.CourseAttachment" select="findAttachmentsByVideoId"/>
    </resultMap>

    <select id="getById" resultMap="getByIdResultMap">
        select 
        v.id, c.id course_id, c.name course_name, v.name, v.image,
        v.file_name, v.file_path, v.file_type, v.file_size, v.upload_time, v.show_state,
        v.introduction, v.description
        from course_video v
        inner join course c on c.id = v.course_id
        where v.id = #{id}::uuid and v.flag = true and v.status = true
    </select>

    <update id="deleteById">
        update course_video set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list" resultType="cn.com.enjoystudy.oa.bean.study.CourseVideo"
            parameterType="cn.com.enjoystudy.oa.bean.study.CourseVideoSO">
        select id, course_id, name,  image, file_name, file_path, file_type, file_size, upload_time, show_state, introduction
        from course_video <include refid="wheres"/>
        order by create_time asc
    </select>

    <select id="findAttachmentsByVideoId" resultType="cn.com.enjoystudy.oa.bean.study.CourseAttachment">
        select id, file_name, file_path, file_type, file_size, upload_time
        from course_attachment
        where video_id = #{videoId}::uuid and flag = true and status = true
    </select>

    <select id="getCount" resultType="long">
        select count(id) amount from course_video <include refid="wheres"/>
    </select>

    <update id="changeShowState">
        update course_video set show_state = #{showState} where id = #{id}::uuid
    </update>

    <select id="videoList" resultType="cn.com.enjoystudy.oa.bean.study.CourseVideo"
            parameterType="cn.com.enjoystudy.oa.bean.study.CourseVideoSO">
        select v.id, v.name, v.image, v.file_path,
        t.id teacher_id, t.full_name teacher_name,
        c.id course_id, c.name course_name
        from course_video v
        inner join course c on c.id = v.course_id
        inner join teacher t on t.id = c.teacher_id
        where v.flag = true and v.status = true
        <if test="null != showState"> and v.show_state = true </if>
        <if test="null != teacherId and '' != teacherId"> and t.id = #{teacherId} </if>
        <if test="null != courseId and '' != courseId"> and c.id = #{courseId} </if>
        <if test="null != name and '' != name">
            <bind name="likeName" value="'%' + name + '%'"/>
            and v.name like #{likeName}
        </if>
        order by v.create_time desc
    </select>
</mapper>