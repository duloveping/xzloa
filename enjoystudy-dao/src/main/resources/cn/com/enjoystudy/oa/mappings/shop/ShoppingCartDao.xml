<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.shop.ShoppingCartDao" >

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.shop.ShoppingCart" >
        insert into shopping_cart (id, create_time, update_time, flag, status,
        account_id, course_id, buy_amount)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status},
        #{accountId}::uuid, #{courseId}::uuid, #{buyAmount})
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.shop.ShoppingCart" >
        update shopping_cart set update_time = #{updateTime},
        account_id = #{accountId}::uuid, course_id = #{courseId}::uuid, buy_amount = #{buyAmount}
        where id = #{id}::uuid
    </update>

    <select id="getById" resultType="cn.com.enjoystudy.oa.bean.shop.ShoppingCart">
        select sc.id, ea.id account_id, ea.full_name,
        c.id course_id, c.code course_code, c.name course_name,
        c.current_price, c.sale_price, c.market_price, sc.buy_amount
        from shopping_cart sc
        inner join employee_account ea on ea.id = sc.account_id
        inner join course c on c.id = sc.course_id
        where sc.flag = true and sc.status = true and sc.id = #{id}::uuid
    </select>

    <update id="deleteById">
        update shopping_cart set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list" resultType="cn.com.enjoystudy.oa.bean.shop.ShoppingCart"
            parameterType="cn.com.enjoystudy.oa.bean.shop.ShoppingCartSO">
        select sc.id, ea.id account_id, ea.full_name, c.image,
        c.id course_id, c.code course_code, c.name course_name,
        c.current_price, c.sale_price, c.market_price, sc.buy_amount
        from shopping_cart sc
        inner join employee_account ea on ea.id = sc.account_id
        inner join course c on c.id = sc.course_id
        where sc.flag = true and sc.status = true
        <if test="null != accountId and '' != accountId"> and ea.id = #{accountId}::uuid </if>
        <if test="null != courseId and '' != courseId"> and c.id = #{courseId}::uuid </if>
    </select>

    <delete id="remove">delete from shopping_cart where account_id = #{accountId} and course_id = #{courseId}</delete>
</mapper>