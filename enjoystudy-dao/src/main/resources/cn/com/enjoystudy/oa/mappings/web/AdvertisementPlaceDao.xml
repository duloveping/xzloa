<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.web.AdvertisementPlaceDao" >
    <sql id="columns"> id, code, name, show_state, category, place_id, css_class, css_style, width, height, description </sql>

    <sql id="wheres">
        <where>
            flag = true and status = true
            <if test="null != showState"> and show_state = #{showState}</if>
            <if test="null != placeId and '' != placeId"> and placeId = #{placeId}</if>
            <if test="null != code and '' != code"> and code = #{code}</if>
            <if test="null != category and '' != category"> and category = #{category}</if>
            <if test="null != name and '' != name">
                <choose>
                    <when test="null != like and like == true"> and name= #{name}</when>
                    <otherwise>
                        <bind name="likeName" value="'%' + name + '%'"/>
                        and name like #{likeName}
                    </otherwise>
                </choose>
            </if>
            <if test="null != exceptId and '' != exceptId">
                <![CDATA[ and id <> #{exceptId}::uuid ]]>
            </if>
        </where>
    </sql>

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlace">
        insert into web_advertisement_place (id, create_time, update_time, flag, status,
        code, name, show_state, category, place_id, css_class, css_style, width, height, description)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status},
        #{code}, #{name}, #{showState}, #{category}, #{placeId}::uuid, #{cssClass}, #{cssStyle}, #{width}, #{height}, #{description})
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlace">
        update web_advertisement_place set update_time = #{updateTime},
        code = #{code}, name = #{name}, show_state = #{showState}, category = #{category}, place_id = #{placeId}::uuid,
        css_class = #{cssClass}, css_style = #{cssStyle}, width = #{width}, height = #{height}, description = #{description}
        where id = #{id}::uuid
    </update>

    <select id="getById" resultType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlace">
        select <include refid="columns"/> from web_advertisement_place where id = #{id}::uuid and flag = true and status = true
    </select>

    <select id="getByCode" resultType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlace">
        select <include refid="columns"/> from web_advertisement_place where code = #{code} and flag = true and status = true
    </select>

    <update id="deleteById">
        update web_advertisement_place set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list"  resultType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlace"
            parameterType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlaceSO">
        select <include refid="columns"/> from web_advertisement_place <include refid="wheres"/> order by create_time desc
    </select>

    <select id="count" resultType="long" parameterType="cn.com.enjoystudy.oa.bean.web.AdvertisementPlaceSO">
        select count(id) amount from web_advertisement_place <include refid="wheres"/>
    </select>
</mapper>