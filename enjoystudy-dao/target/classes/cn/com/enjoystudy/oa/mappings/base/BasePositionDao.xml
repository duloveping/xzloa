<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.enjoystudy.oa.dao.base.BasePositionDao">
    <sql id="columns"> id, code, name, caption, show_state, serial_number </sql>

    <sql id="wheres">
        <where>
            flag = true and status = true
            <if test="null != showState"> and show_state = #{showState}</if>
            <if test="null != code and '' != code"> and code = #{code}</if>
            <if test="null != name and '' != name">
                <choose>
                    <when test="null != like and like == true"> and name= #{name}</when>
                    <otherwise>
                        <bind name="likeName" value="'%' + name + '%'"/>
                        and name like #{likeName}
                    </otherwise>
                </choose>
            </if>
            <if test="null != exceptId and '' != exceptId">
                <![CDATA[ and id <> #{exceptId}::uuid ]]>
            </if>
        </where>
    </sql>

    <insert id="insert" parameterType="cn.com.enjoystudy.oa.bean.base.BasePosition" >
        insert into base_position (id, create_time, update_time, flag, status, code, name, caption, show_state, serial_number)
        values (#{id}::uuid, #{createTime}, #{updateTime}, #{flag}, #{status}, #{code}, #{name}, #{caption}, #{showState}, #{serialNumber})
    </insert>

    <update id="update" parameterType="cn.com.enjoystudy.oa.bean.base.BasePosition" >
        update base_position set update_time = #{updateTime}, code = #{code}, name = #{name}, caption = #{caption},
        serial_number = #{serialNumber}, show_state = #{showState} where id = #{id}::uuid
    </update>

    <resultMap id="resultMap" type="cn.com.enjoystudy.oa.bean.base.BasePosition">
        <result column="id" jdbcType="VARCHAR" property="id" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="caption" jdbcType="VARCHAR" property="caption" />
        <result column="show_state" jdbcType="BOOLEAN" property="showState" />
        <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
        <collection property="sysRoleList" column="{positionId=id}" javaType="java.util.List"
                    ofType="cn.com.enjoystudy.oa.bean.sys.SysRole" select="findRoleByPositionId"/>
    </resultMap>

    <select id="getById" resultType="cn.com.enjoystudy.oa.bean.base.BasePosition">
        select <include refid="columns"/> from base_position where id = #{id}::uuid and flag = true and status = true
    </select>

    <update id="deleteById">
        update base_position set flag = false, status = false where id = #{id}::uuid
    </update>

    <select id="list" resultMap="resultMap"
            parameterType="cn.com.enjoystudy.oa.bean.base.BasePositionSO">
        select <include refid="columns"/> from base_position <include refid="wheres"/>
        order by serial_number asc, create_time desc
    </select>

    <select id="count" resultType="long"
            parameterType="cn.com.enjoystudy.oa.bean.base.BasePositionSO">
        select count(id) amount from base_position <include refid="wheres"/>
    </select>

    <select id="findRoleByPositionId" resultType="cn.com.enjoystudy.oa.bean.sys.SysRole">
        select <include refid="columns"/> from sys_role r
        where r.status = true and r.flag = true
        and exists(select distinct rp.role_id from sys_role_position rp
        where rp.status = true and rp.flag = true and rp.role_id = r.id
        and rp.position_id = #{positionId}::uuid)
        order by r.serial_number asc, r.update_time desc
    </select>
</mapper>